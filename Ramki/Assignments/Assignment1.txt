def get_distance(arr):
    sum_of_pair_distances = 0
    n = len(arr)
    for i in range(32):
        cnt = 0
        for j in range(len(arr)):
            if(arr[j] & (1 << i)):
                cnt += 1
        sum_of_pair_distances += (cnt*(len(arr)-cnt)*2)
    return sum_of_pair_distances

get_distance([2,3,5])

def move_steps(k):
    if(k==1):
        return 1
    if(k==2):
        return 2
    answer = 0
    answer += move_steps(k-1)+move_steps(k-2)
    return answer
	
move_steps(4)

def decode_message(s):
    message=''
    for i in range(len(s)):
        if(int((i+1)%3)==0 and s[i]==s[i-1]):
            continue
        message+=s[i]
    return message
	
decode_message("this is a test")

def count_sub_strs(s: str) ->int:
    # Count the number of substrings that have equal number of consecutive a's followed by b's or vice versa
    groups=[1]
    number_of_sub_strings = 0
    for i in range(1,len(s)):
        if(s[i]!=s[i-1]):
            groups.append(1)
        else:
            groups[-1]+=1
    for i in range(1,len(groups)):
        number_of_sub_strings+=min(groups[i],groups[i-1])
    return number_of_sub_strings
	
count_sub_strs('aabba')


def check_transformation(s1, s2):
    # your code here
    canTransform=True
    map_dict={}
    for i in range(len(s1)):
        if(s1[i] not in map_dict):
            map_dict[s1[i]] = s2[i]
        else:
            if(map_dict[s1[i]]!=s2[i]):
                canTransform=False
    return canTransform
	
check_transformation('abb','abc')
